# ==============================================================
# CI with GitHub Actions
# ==============================================================

name: Testing

on:
  workflow_call:

env:
  default-python: 3.12

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        tox_env: [py310, py311, py312, py313]
        include:
          - tox_env: style
          - tox_env: docstyle
          - tox_env: check-manifest
          - tox_env: check-testdir
          - tox_env: check-headers
          - tox_env: check-apidocsdir
          - tox_env: mkdocs
            pandoc: true

    # The operative sistem
    runs-on: ${{ matrix.os || 'ubuntu-latest' }}

    # the steps of the CI
    steps:
      - uses: actions/checkout@master

      # optionals
      - name: Install pandoc
        if: ${{ matrix.pandoc }}
        run: sudo apt-get install pandoc

      - name: Determine Python version
        id: pyversion
        if: ${{ startsWith( matrix.tox_env, 'py3' ) }}
        uses: bluwy/substitute-string-action@v1
        with:
          _input-text: ${{ matrix.tox_env }}
          py3: "3."

      # tox steps
      - name: Set up Python ${{ steps.pyversion.outputs.result || env.default-python }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ steps.pyversion.outputs.result || env.default-python }}

      - name: Install tox
        run: pip install tox

      - name: tox -re ${{ matrix.tox_env }}
        run: tox -re ${{ matrix.tox_env }}

      # Save coverage data if this is a Python test environment
      - name: Save coverage data
        if: ${{ startsWith( matrix.tox_env, 'py3' ) }}
        uses: actions/upload-artifact@v2
        with:
          name: coverage-data-${{ matrix.tox_env }}
          path: .tox/.coverage.${{ matrix.tox_env }}
          retention-days: 1

  # Separate job to combine coverage data
  coverage:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ env.default-python }}

      # Create the .tox directory where coverage files will be stored
      - name: Create .tox directory
        run: mkdir -p .tox

      # Download all coverage artifacts
      - name: Download all coverage data
        uses: actions/download-artifact@v2
        with:
          path: .tox-artifacts

      # Move coverage files to the correct location
      - name: Prepare coverage files
        run: |
          find .tox-artifacts -name ".coverage.*" -type f -exec cp {} .tox/ \;
          ls -la .tox/

      # Install tox and run coverage
      - name: Install tox
        run: pip install tox

      # Run coverage analysis
      - name: Run coverage combine and report
        run: tox -re coverage